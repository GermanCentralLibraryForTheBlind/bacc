{
  "lang": "ru",
  "rules": {
    "accesskeys": {
      "description": "Ensures every accesskey attribute value is unique",
      "help": "accesskey attribute value must be unique"
    },
    "area-alt": {
      "description": "Ensures <area> elements of image maps have alternate text",
      "help": "Active <area> elements must have alternate text"
    },
    "aria-allowed-attr": {
      "description": "Ensures ARIA attributes are allowed for an element's role",
      "help": "Elements must only use allowed ARIA attributes"
    },
    "aria-hidden-body": {
      "description": "Ensures aria-hidden='true' is not present on the document body.",
      "help": "aria-hidden='true' must not be present on the document body"
    },
    "aria-required-attr": {
      "description": "Ensures elements with ARIA roles have all required ARIA attributes",
      "help": "Required ARIA attributes must be provided"
    },
    "aria-required-children": {
      "description": "Ensures elements with an ARIA role that require child roles contain them",
      "help": "Certain ARIA roles must contain particular children"
    },
    "aria-required-parent": {
      "description": "Ensures elements with an ARIA role that require parent roles are contained by them",
      "help": "Certain ARIA roles must be contained by particular parents"
    },
    "aria-roles": {
      "description": "Ensures all elements with a role attribute use a valid value",
      "help": "ARIA roles used must conform to valid values"
    },
    "aria-valid-attr-value": {
      "description": "Ensures all ARIA attributes have valid values",
      "help": "ARIA attributes must conform to valid values"
    },
    "aria-valid-attr": {
      "description": "Ensures attributes that begin with aria- are valid ARIA attributes",
      "help": "ARIA attributes must conform to valid names"
    },
    "audio-caption": {
      "description": "Ensures <audio> elements have captions",
      "help": "<audio> elements must have a captions track"
    },
    "blink": {
      "description": "Ensures <blink> elements are not used",
      "help": "<blink> elements are deprecated and must not be used"
    },
    "button-name": {
      "description": "Ensures buttons have discernible text",
      "help": "Buttons must have discernible text"
    },
    "bypass": {
      "description": "Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content",
      "help": "Page must have means to bypass repeated blocks"
    },
    "checkboxgroup": {
      "description": "Ensures related <input type=\"checkbox\"> elements have a group and that that group designation is consistent",
      "help": "Checkbox inputs with the same name attribute value must be part of a group"
    },
    "color-contrast": {
      "description": "Ensures the contrast between foreground and background colors meets WCAG 2 AA contrast ratio thresholds",
      "help": "Elements must have sufficient color contrast"
    },
    "definition-list": {
      "description": "Ensures <dl> elements are structured correctly",
      "help": "<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script> or <template> elements"
    },
    "dlitem": {
      "description": "Ensures <dt> and <dd> elements are contained by a <dl>",
      "help": "<dt> and <dd> elements must be contained by a <dl>"
    },
    "document-title": {
      "description": "Ensures each HTML document contains a non-empty <title> element",
      "help": "Documents must have <title> element to aid in navigation"
    },
    "duplicate-id": {
      "description": "Ensures every id attribute value is unique",
      "help": "id attribute value must be unique"
    },
    "empty-heading": {
      "description": "Ensures headings have discernible text",
      "help": "Headings must not be empty"
    },
    "frame-title-unique": {
      "description": "Ensures <iframe> and <frame> elements contain a unique title attribute",
      "help": "Frames must have a unique title attribute"
    },
    "frame-title": {
      "description": "Ensures <iframe> and <frame> elements contain a non-empty title attribute",
      "help": "Frames must have title attribute"
    },
    "heading-order": {
      "description": "Ensures the order of headings is semantically correct",
      "help": "Heading levels should only increase by one"
    },
    "hidden-content": {
      "description": "Informs users about hidden content.",
      "help": "Hidden content on the page cannot be analyzed"
    },
    "href-no-hash": {
      "description": "Ensures that href values are valid link references to promote only using anchors as links",
      "help": "Anchors must only be used as links with valid URLs or URL fragments"
    },
    "html-has-lang": {
      "description": "Ensures every HTML document has a lang attribute",
      "help": "<html> element must have a lang attribute"
    },
    "html-lang-valid": {
      "description": "Ensures the lang attribute of the <html> element has a valid value",
      "help": "<html> element must have a valid value for the lang attribute"
    },
    "image-alt": {
      "description": "Ensures <img> elements have alternate text or a role of none or presentation",
      "help": "Images must have alternate text"
    },
    "image-redundant-alt": {
      "description": "Ensure button and link text is not repeated as image alternative",
      "help": "Text of buttons and links should not be repeated in the image alternative"
    },
    "input-image-alt": {
      "description": "Ensures <input type=\"image\"> elements have alternate text",
      "help": "Image buttons must have alternate text"
    },
    "label-title-only": {
      "description": "Ensures that every form element is not solely labeled using the title or aria-describedby attributes",
      "help": "Form elements should have a visible label"
    },
    "label": {
      "description": "Ensures every form element has a label",
      "help": "Form elements must have labels"
    },
    "landmark-main-is-top-level": {
      "description": "The main landmark should not be contained in another landmark",
      "help": "Main landmark is not at top level"
    },
    "landmark-one-main": {
      "description": "Ensures a navigation point to the primary content of the page. If the page contains iframes, each iframe should contain either no main landmarks or just one.",
      "help": "Page must contain one main landmark."
    },
    "layout-table": {
      "description": "Ensures presentational <table> elements do not use <th>, <caption> elements or the summary attribute",
      "help": "Layout tables must not use data table elements"
    },
    "link-in-text-block": {
      "description": "Links can be distinguished without relying on color",
      "help": "Links must be distinguished from surrounding text in a way that does not rely on color"
    },
    "link-name": {
      "description": "Ensures links have discernible text",
      "help": "Links must have discernible text"
    },
    "list": {
      "description": "Ensures that lists are structured correctly",
      "help": "<ul> and <ol> must only directly contain <li>, <script> or <template> elements"
    },
    "listitem": {
      "description": "Ensures <li> elements are used semantically",
      "help": "<li> elements must be contained in a <ul> or <ol>"
    },
    "marquee": {
      "description": "Ensures <marquee> elements are not used",
      "help": "<marquee> elements are deprecated and must not be used"
    },
    "meta-refresh": {
      "description": "Ensures <meta http-equiv=\"refresh\"> is not used",
      "help": "Timed refresh must not exist"
    },
    "meta-viewport-large": {
      "description": "Ensures <meta name=\"viewport\"> can scale a significant amount",
      "help": "Users should be able to zoom and scale the text up to 500%"
    },
    "meta-viewport": {
      "description": "Ensures <meta name=\"viewport\"> does not disable text scaling and zooming",
      "help": "Zooming and scaling must not be disabled"
    },
    "object-alt": {
      "description": "Ensures <object> elements have alternate text",
      "help": "<object> elements must have alternate text"
    },
    "p-as-heading": {
      "description": "Ensure p elements are not used to style headings",
      "help": "Bold, italic text and font-size are not used to style p elements as a heading"
    },
    "radiogroup": {
      "description": "Ensures related <input type=\"radio\"> elements have a group and that the group designation is consistent",
      "help": "Radio inputs with the same name attribute value must be part of a group"
    },
    "region": {
      "description": "Ensures all content is contained within a landmark region",
      "help": "Content should be contained in a landmark region"
    },
    "scope-attr-valid": {
      "description": "Ensures the scope attribute is used correctly on tables",
      "help": "scope attribute should be used correctly"
    },
    "server-side-image-map": {
      "description": "Ensures that server-side image maps are not used",
      "help": "Server-side image maps must not be used"
    },
    "skip-link": {
      "description": "Ensures the first link on the page is a skip link",
      "help": "The page should have a skip link as its first link"
    },
    "tabindex": {
      "description": "Ensures tabindex attribute values are not greater than 0",
      "help": "Elements should not have tabindex greater than zero"
    },
    "table-duplicate-name": {
      "description": "Ensure that tables do not have the same summary and caption",
      "help": "The <caption> element should not contain the same text as the summary attribute"
    },
    "table-fake-caption": {
      "description": "Ensure that tables with a caption use the <caption> element.",
      "help": "Data or header cells should not be used to give caption to a data table."
    },
    "td-has-header": {
      "description": "Ensure that each non-empty data cell in a large table has one or more table headers",
      "help": "All non-empty td element in table larger than 3 by 3 must have an associated table header"
    },
    "td-headers-attr": {
      "description": "Ensure that each cell in a table using the headers refers to another cell in that table",
      "help": "All cells in a table element that use the headers attribute must only refer to other cells of that same table"
    },
    "th-has-data-cells": {
      "description": "Ensure that each table header in a data table refers to data cells",
      "help": "All th elements and elements with role=columnheader/rowheader must have data cells they describe"
    },
    "valid-lang": {
      "description": "Ensures lang attributes have valid values",
      "help": "lang attribute must have a valid value"
    },
    "video-caption": {
      "description": "Ensures <video> elements have captions",
      "help": "<video> elements must have captions"
    },
    "video-description": {
      "description": "Ensures <video> elements have audio descriptions",
      "help": "<video> elements must have an audio description track"
    }
  },
  "checks": {
    "abstractrole": {
      "pass": "Abstract roles are not used",
      "fail": "Abstract roles cannot be directly used"
    },
    "aria-allowed-attr": {
      "pass": "ARIA attributes are used correctly for the defined role",
      "fail": "ARIA attribute{{=it.data && it.data.length > 1 ? 's are' : ' is'}} not allowed:{{~it.data:value}} {{=value}}{{~}}"
    },
    "aria-hidden-body": {
      "pass": "No aria-hidden attribute is present on document body",
      "fail": "aria-hidden=true should not be present on the document body"
    },
    "aria-errormessage": {
      "pass": "Uses a supported aria-errormessage technique",
      "fail": "aria-errormessage value{{=it.data && it.data.length > 1 ? 's' : ''}} {{~it.data:value}} `{{=value}}{{~}}` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)"
    },
    "invalidrole": {
      "pass": "ARIA role is valid",
      "fail": "Role must be one of the valid ARIA roles"
    },
    "aria-required-attr": {
      "pass": "All required ARIA attributes are present",
      "fail": "Required ARIA attribute{{=it.data && it.data.length > 1 ? 's' : ''}} not present:{{~it.data:value}} {{=value}}{{~}}"
    },
    "aria-required-children": {
      "pass": "Required ARIA children are present",
      "fail": "Required ARIA {{=it.data && it.data.length > 1 ? 'children' : 'child'}} role not present:{{~it.data:value}} {{=value}}{{~}}"
    },
    "aria-required-parent": {
      "pass": "Required ARIA parent role present",
      "fail": "Required ARIA parent{{=it.data && it.data.length > 1 ? 's' : ''}} role not present:{{~it.data:value}} {{=value}}{{~}}"
    },
    "aria-valid-attr-value": {
      "pass": "ARIA attribute values are valid",
      "fail": "Invalid ARIA attribute value{{=it.data && it.data.length > 1 ? 's' : ''}}:{{~it.data:value}} {{=value}}{{~}}"
    },
    "aria-valid-attr": {
      "pass": "ARIA attribute name{{=it.data && it.data.length > 1 ? 's' : ''}} are valid",
      "fail": "Invalid ARIA attribute name{{=it.data && it.data.length > 1 ? 's' : ''}}:{{~it.data:value}} {{=value}}{{~}}"
    },
    "color-contrast": {
      "pass": "Element has sufficient color contrast of {{=it.data.contrastRatio}}",
      "fail": "Element has insufficient color contrast of {{=it.data.contrastRatio}} (foreground color: {{=it.data.fgColor}}, background color: {{=it.data.bgColor}}, font size: {{=it.data.fontSize}}, font weight: {{=it.data.fontWeight}}). Expected contrast ratio of {{=it.data.expectedContrastRatio}}",
      "incomplete": {
        "bgImage": "Element's background color could not be determined due to a background image",
        "bgGradient": "Element's background color could not be determined due to a background gradient",
        "imgNode": "Element's background color could not be determined because element contains an image node",
        "bgOverlap": "Element's background color could not be determined because it is overlapped by another element",
        "fgAlpha": "Element's foreground color could not be determined because of alpha transparency",
        "elmPartiallyObscured": "Element's background color could not be determined because it's partially obscured by another element",
        "elmPartiallyObscuring": "Element's background color could not be determined because it partially overlaps other elements",
        "outsideViewport": "Element's background color could not be determined because it's outside the viewport",
        "equalRatio": "Element has a 1:1 contrast ratio with the background",
        "default": "Unable to determine contrast ratio"
      }
    },
    "link-in-text-block": {
      "pass": "Links can be distinguished from surrounding text in a way that does not rely on color",
      "fail": "Links can not be distinguished from surrounding text in a way that does not rely on color",
      "incomplete": {
        "bgContrast": "Element's contrast ratio could not be determined. Check for a distinct hover/focus style",
        "bgImage": "Element's contrast ratio could not be determined due to a background image",
        "bgGradient": "Element's contrast ratio could not be determined due to a background gradient",
        "imgNode": "Element's contrast ratio could not be determined because element contains an image node",
        "bgOverlap": "Element's contrast ratio could not be determined because of element overlap",
        "default": "Unable to determine contrast ratio"
      }
    },
    "fieldset": {
      "pass": "Element is contained in a fieldset",
      "fail": "{{var code = it.data && it.data.failureCode;}}{{? code === 'no-legend'}}Fieldset does not have a legend as its first child{{?? code === 'empty-legend'}}Legend does not have text that is visible to screen readers{{?? code === 'mixed-inputs'}}Fieldset contains unrelated inputs{{?? code === 'no-group-label'}}ARIA group does not have aria-label or aria-labelledby{{?? code === 'group-mixed-inputs'}}ARIA group contains unrelated inputs{{??}}Element does not have a containing fieldset or ARIA group{{?}}"
    },
    "group-labelledby": {
      "pass": "All elements with the name \"{{=it.data.name}}\" reference the same element with aria-labelledby",
      "fail": "All elements with the name \"{{=it.data.name}}\" do not reference the same element with aria-labelledby"
    },
    "accesskeys": {
      "pass": "Accesskey attribute value is unique",
      "fail": "Document has multiple elements with the same accesskey"
    },
    "focusable-no-name": {
      "pass": "Element is not in tab order or has accessible text",
      "fail": "Element is in tab order and does not have accessible text"
    },
    "has-at-least-one-main": {
      "pass": "Document has at least one main landmark",
      "fail": "Document has no main landmarks"
    },
    "has-no-more-than-one-main": {
      "pass": "Document has no more than one main landmark",
      "fail": "Document has more than one main landmark"
    },
    "main-is-top-level": {
      "pass": "The main landmark is at the top level.",
      "fail": "The main landmark is contained in another landmark."
    },
    "tabindex": {
      "pass": "Element does not have a tabindex greater than 0",
      "fail": "Element has a tabindex greater than 0"
    },
    "duplicate-img-label": {
      "pass": "Element does not duplicate existing text in <img> alt text",
      "fail": "Element contains <img> element with alt text that duplicates existing text"
    },
    "explicit-label": {
      "pass": "Form element has an explicit <label>",
      "fail": "Form element does not have an explicit <label>"
    },
    "help-same-as-label": {
      "pass": "Help text (title or aria-describedby) does not duplicate label text",
      "fail": "Help text (title or aria-describedby) text is the same as the label text"
    },
    "implicit-label": {
      "pass": "Form element has an implicit (wrapped) <label>",
      "fail": "Form element does not have an implicit (wrapped) <label>"
    },
    "multiple-label": {
      "pass": "Form element does not have multiple <label> elements",
      "fail": "Form element has multiple <label> elements"
    },
    "title-only": {
      "pass": "Form element does not solely use title attribute for its label",
      "fail": "Only title used to generate label for form element"
    },
    "has-lang": {
      "pass": "The <html> element has a lang attribute",
      "fail": "The <html> element does not have a lang attribute"
    },
    "valid-lang": {
      "pass": "Value of lang attribute is included in the list of valid languages",
      "fail": "Value of lang attribute not included in the list of valid languages"
    },
    "dlitem": {
      "pass": "Description list item has a <dl> parent element",
      "fail": "Description list item does not have a <dl> parent element"
    },
    "has-listitem": {
      "pass": "List element contains a <li> element",
      "fail": "List element does not contain a <li> element"
    },
    "listitem": {
      "pass": "List item has a <ul>, <ol> or role=\"list\" parent element",
      "fail": "List item does not have a <ul>, <ol> or role=\"list\" parent element"
    },
    "only-dlitems": {
      "pass": "List element only has direct children that are allowed inside <dt> or <dd> elements",
      "fail": "List element has direct children that are not allowed inside <dt> or <dd> elements"
    },
    "only-listitems": {
      "pass": "List element only has direct children that are allowed inside <li> elements",
      "fail": "List element has direct children that are not allowed inside <li> elements"
    },
    "structured-dlitems": {
      "pass": "When not empty, element has both <dt> and <dd> elements",
      "fail": "When not empty, element does not have at least one <dt> element followed by at least one <dd> element"
    },
    "caption": {
      "pass": "The multimedia element has a captions track",
      "fail": "The multimedia element does not have a captions track",
      "incomplete": "A captions track for this element could not be found"
    },
    "description": {
      "pass": "The multimedia element has an audio description track",
      "fail": "The multimedia element does not have an audio description track",
      "incomplete": "An audio description track for this element could not be found"
    },
    "meta-viewport-large": {
      "pass": "<meta> tag does not prevent significant zooming on mobile devices",
      "fail": "<meta> tag limits zooming on mobile devices"
    },
    "meta-viewport": {
      "pass": "<meta> tag does not disable zooming on mobile devices",
      "fail": "<meta> tag disables zooming on mobile devices"
    },
    "header-present": {
      "pass": "Page has a header",
      "fail": "Page does not have a header"
    },
    "heading-order": {
      "pass": "Heading order valid",
      "fail": "Heading order invalid"
    },
    "href-no-hash": {
      "pass": "Anchor does not have an href value of #",
      "fail": "Anchor has an href value of #"
    },
    "internal-link-present": {
      "pass": "Valid skip link found",
      "fail": "No valid skip link found"
    },
    "landmark": {
      "pass": "Page has a landmark region",
      "fail": "Page does not have a landmark region"
    },
    "meta-refresh": {
      "pass": "<meta> tag does not immediately refresh the page",
      "fail": "<meta> tag forces timed refresh of page"
    },
    "p-as-heading": {
      "pass": "<p> elements are not styled as headings",
      "fail": "Heading elements should be used instead of styled p elements"
    },
    "region": {
      "pass": "Content contained by ARIA landmark",
      "fail": "Content not contained by an ARIA landmark"
    },
    "skip-link": {
      "pass": "Valid skip link found",
      "fail": "No valid skip link found"
    },
    "unique-frame-title": {
      "pass": "Element's title attribute is unique",
      "fail": "Element's title attribute is not unique"
    },
    "aria-label": {
      "pass": "aria-label attribute exists and is not empty",
      "fail": "aria-label attribute does not exist or is empty"
    },
    "aria-labelledby": {
      "pass": "aria-labelledby attribute exists and references elements that are visible to screen readers",
      "fail": "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty or not visible"
    },
    "button-has-visible-text": {
      "pass": "Element has inner text that is visible to screen readers",
      "fail": "Element does not have inner text that is visible to screen readers"
    },
    "doc-has-title": {
      "pass": "Document has a non-empty <title> element",
      "fail": "Document does not have a non-empty <title> element"
    },
    "duplicate-id": {
      "pass": "Document has no elements that share the same id attribute",
      "fail": "Document has multiple elements with the same id attribute: {{=it.data}}"
    },
    "exists": {
      "pass": "Element does not exist",
      "fail": "Element exists"
    },
    "has-alt": {
      "pass": "Element has an alt attribute",
      "fail": "Element does not have an alt attribute"
    },
    "has-visible-text": {
      "pass": "Element has text that is visible to screen readers",
      "fail": "Element does not have text that is visible to screen readers"
    },
    "is-on-screen": {
      "pass": "Element is not visible",
      "fail": "Element is visible"
    },
    "non-empty-alt": {
      "pass": "Element has a non-empty alt attribute",
      "fail": "Element has no alt attribute or the alt attribute is empty"
    },
    "non-empty-if-present": {
      "pass": "Element {{?it.data}}has a non-empty value attribute{{??}}does not have a value attribute{{?}}",
      "fail": "Element has a value attribute and the value attribute is empty"
    },
    "non-empty-title": {
      "pass": "Element has a title attribute",
      "fail": "Element has no title attribute or the title attribute is empty"
    },
    "non-empty-value": {
      "pass": "Element has a non-empty value attribute",
      "fail": "Element has no value attribute or the value attribute is empty"
    },
    "role-none": {
      "pass": "Element's default semantics were overriden with role=\"none\"",
      "fail": "Element's default semantics were not overridden with role=\"none\""
    },
    "role-presentation": {
      "pass": "Element's default semantics were overriden with role=\"presentation\"",
      "fail": "Element's default semantics were not overridden with role=\"presentation\""
    },
    "caption-faked": {
      "pass": "The first row of a table is not used as a caption",
      "fail": "The first row of the table should be a caption instead of a table cell"
    },
    "has-caption": {
      "pass": "Layout table does not use <caption> element",
      "fail": "Layout table uses <caption> element"
    },
    "has-summary": {
      "pass": "Layout table does not use summary attribute",
      "fail": "Layout table uses summary attribute"
    },
    "has-th": {
      "pass": "Layout table does not use <th> elements",
      "fail": "Layout table uses <th> elements"
    },
    "html5-scope": {
      "pass": "Scope attribute is only used on table header elements (<th>)",
      "fail": "In HTML 5, scope attributes may only be used on table header elements (<th>)"
    },
    "same-caption-summary": {
      "pass": "Content of summary attribute and <caption> are not duplicated",
      "fail": "Content of summary attribute and <caption> element are identical"
    },
    "scope-value": {
      "pass": "Scope attribute is used correctly",
      "fail": "The value of the scope attribute may only be 'row' or 'col'"
    },
    "td-has-header": {
      "pass": "All non-empty data cells have table headers",
      "fail": "Some non-empty data cells do not have table headers"
    },
    "td-headers-attr": {
      "pass": "The headers attribute is exclusively used to refer to other cells in the table",
      "fail": "The headers attribute is not exclusively used to refer to other cells in the table"
    },
    "th-has-data-cells": {
      "pass": "All table header cells refer to data cells",
      "fail": "Not all table header cells refer to data cells",
      "incomplete": "Table data cells are missing or empty"
    },
    "hidden-content": {
      "pass": "All content on the page has been analyzed.",
      "fail": "There were problems analyzing the content on this page.",
      "incomplete": "There is hidden content on the page that was not analyzed. You will need to trigger the display of this content in order to analyze it."
    }
  },
  "failureSummaries": {
    "any": {
      "failureMessage": "Fix any of the following:{{~it:value}}\n  {{=value.split('\\n').join('\\n  ')}}{{~}}"
    },
    "none": {
      "failureMessage": "Fix all of the following:{{~it:value}}\n  {{=value.split('\\n').join('\\n  ')}}{{~}}"
    }
  },
  "incompleteFallbackMessage": {
    "undefined": {
      "failureMessage": "Fix all of the following:{{~it:value}}\n  {{=value.split('\\n').join('\\n  ')}}{{~}}"
    }
  }
}